{"version":3,"file":"static/js/261.7ea7bb5d.chunk.js","mappings":"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","sources":["components/AccessibilityWelcome.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogTitle, Button, Typography, Box } from '@mui/material';\nimport { SpeakerWaveIcon, EyeSlashIcon, HandRaisedIcon } from '@heroicons/react/24/outline';\nimport { motion } from 'framer-motion';\n\ninterface AccessibilityWelcomeProps {\n  onModeSelect: (mode: 'deaf' | 'blind' | null) => void;\n}\n\nconst AccessibilityWelcome: React.FC<AccessibilityWelcomeProps> = ({ onModeSelect }) => {\n  const [open, setOpen] = useState(false);\n  const [hasShown, setHasShown] = useState(false);\n\n  useEffect(() => {\n    // Check if this is the first visit or user hasn't selected a mode\n    const hasSeenWelcome = localStorage.getItem('link-accessibility-welcome');\n    const savedMode = localStorage.getItem('link-accessibility-mode');\n    \n    if (!hasSeenWelcome && !hasShown) {\n      setOpen(true);\n      setHasShown(true);\n      \n      // Speak welcome message\n      const welcomeMessage = \"Welcome to LinK! I'm your accessibility assistant. I can help you navigate this website. Would you like to use voice control for blind accessibility, or continue with visual features for deaf accessibility? Press B for blind mode, or D for deaf mode.\";\n      speakText(welcomeMessage);\n    } else if (savedMode) {\n      onModeSelect(savedMode as 'deaf' | 'blind');\n    }\n  }, [hasShown, onModeSelect]);\n\n  const speakText = (text: string) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 0.8;\n      utterance.volume = 0.8;\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  const handleModeSelect = (mode: 'deaf' | 'blind') => {\n    localStorage.setItem('link-accessibility-welcome', 'true');\n    localStorage.setItem('link-accessibility-mode', mode);\n    setOpen(false);\n    onModeSelect(mode);\n    \n    if (mode === 'blind') {\n      speakText(\"Blind mode activated. Voice control is now enabled. You can say commands like 'go to home', 'go to tools', 'go to chat', or 'sign in'. I'll wait for your voice commands.\");\n    } else {\n      speakText(\"Deaf mode activated. Visual interface is optimized for you.\");\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'b') {\n      handleModeSelect('blind');\n    } else if (event.key.toLowerCase() === 'd') {\n      handleModeSelect('deaf');\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"sm\"\n      fullWidth\n      disableEscapeKeyDown\n      onKeyDown={handleKeyPress}\n      PaperProps={{\n        sx: {\n          borderRadius: 3,\n          padding: 2\n        }\n      }}\n    >\n      <DialogTitle>\n        <Box textAlign=\"center\" mb={2}>\n          <motion.div\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            transition={{ duration: 0.5 }}\n          >\n            <div className=\"bg-gradient-to-br from-blue-500 to-purple-600 rounded-full p-4 w-20 h-20 mx-auto mb-4 flex items-center justify-center\">\n              <HandRaisedIcon className=\"h-10 w-10 text-white\" />\n            </div>\n          </motion.div>\n          <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n            Welcome to LinK\n          </Typography>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            Your bridge to inclusive learning and communication\n          </Typography>\n        </Box>\n      </DialogTitle>\n      \n      <DialogContent>\n        <Typography variant=\"h6\" gutterBottom className=\"text-center mb-4\">\n          How would you like to experience LinK today?\n        </Typography>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <motion.div\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <Button\n              fullWidth\n              variant=\"outlined\"\n              size=\"large\"\n              onClick={() => handleModeSelect('blind')}\n              className=\"p-6 h-auto flex-col space-y-3 border-2 hover:border-blue-500\"\n              sx={{ textTransform: 'none' }}\n            >\n              <EyeSlashIcon className=\"h-12 w-12 text-blue-600\" />\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Voice Control (B)\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" textAlign=\"center\">\n                Navigate hands-free with voice commands. Perfect for blind users or those who prefer audio interaction.\n              </Typography>\n            </Button>\n          </motion.div>\n          \n          <motion.div\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <Button\n              fullWidth\n              variant=\"outlined\"\n              size=\"large\"\n              onClick={() => handleModeSelect('deaf')}\n              className=\"p-6 h-auto flex-col space-y-3 border-2 hover:border-green-500\"\n              sx={{ textTransform: 'none' }}\n            >\n              <HandRaisedIcon className=\"h-12 w-12 text-green-600\" />\n              <Typography variant=\"h6\" fontWeight=\"bold\">\n                Visual Interface (D)\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" textAlign=\"center\">\n                Enhanced visual experience with sign language learning tools and visual feedback.\n              </Typography>\n            </Button>\n          </motion.div>\n        </div>\n        \n        <Box mt={4} textAlign=\"center\">\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            Use keyboard: Press <strong>B</strong> for Voice Control or <strong>D</strong> for Visual Interface\n          </Typography>\n          <br />\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            You can change this setting anytime in your profile.\n          </Typography>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AccessibilityWelcome; "],"names":["_ref","onModeSelect","open","setOpen","useState","hasShown","setHasShown","useEffect","hasSeenWelcome","localStorage","getItem","savedMode","speakText","text","window","utterance","SpeechSynthesisUtterance","rate","volume","speechSynthesis","speak","handleModeSelect","mode","setItem","_jsxs","Dialog","maxWidth","fullWidth","disableEscapeKeyDown","onKeyDown","event","key","toLowerCase","PaperProps","sx","borderRadius","padding","children","_jsx","DialogTitle","Box","textAlign","mb","motion","div","initial","scale","animate","transition","duration","className","HandRaisedIcon","Typography","variant","fontWeight","gutterBottom","color","DialogContent","whileHover","whileTap","Button","size","onClick","textTransform","EyeSlashIcon","mt"],"sourceRoot":""}